// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Senai.Vagas.Infrastructure.Contexts;

namespace Senai.Vagas.Backend.Migrations
{
    [DbContext(typeof(SenaiVagasContext))]
    [Migration("20201018124215_ContextCotagroDB")]
    partial class ContextCotagroDB
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Senai.Vagas.Domain.AggregatesModel.AlterarCredenciaisAggregate.Models.AlterarCredenciais", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Ativo");

                    b.Property<DateTime>("DataValida");

                    b.Property<string>("NovoEmail");

                    b.Property<string>("Token");

                    b.Property<long>("UsuarioId");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioId");

                    b.ToTable("AlterarCredenciais");
                });

            modelBuilder.Entity("Senai.Vagas.Domain.AggregatesModel.AlunoAggregate.Models.Aluno", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DataMatricula");

                    b.Property<DateTime>("DataNascimento");

                    b.Property<string>("Email");

                    b.Property<string>("NomeCompleto");

                    b.Property<string>("RMA");

                    b.Property<bool>("Sexo");

                    b.Property<long>("TermoOuEgressoAlunoId");

                    b.Property<long>("TipoCursoId");

                    b.HasKey("Id");

                    b.HasIndex("TermoOuEgressoAlunoId");

                    b.HasIndex("TipoCursoId");

                    b.ToTable("Alunos");
                });

            modelBuilder.Entity("Senai.Vagas.Domain.AggregatesModel.AreaAggregate.Models.Area", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descricao");

                    b.HasKey("Id");

                    b.ToTable("Areas");
                });

            modelBuilder.Entity("Senai.Vagas.Domain.AggregatesModel.ConviteEntrevistaAggregate.Models.ConviteEntrevista", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DataHoraEntrevista");

                    b.Property<long>("EnderecoId");

                    b.Property<string>("InfosComplementares");

                    b.Property<long>("UsuarioCandidatoAlunoId");

                    b.Property<long>("VagaId");

                    b.HasKey("Id");

                    b.HasIndex("EnderecoId");

                    b.HasIndex("UsuarioCandidatoAlunoId");

                    b.HasIndex("VagaId");

                    b.ToTable("ConvitesEntrevistas");
                });

            modelBuilder.Entity("Senai.Vagas.Domain.AggregatesModel.EmpresaAggregate.Models.AtividadeCnae", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("EmpresaId");

                    b.Property<long>("TipoAtividadeCnaeId");

                    b.Property<long>("TipoCnaeId");

                    b.HasKey("Id");

                    b.HasIndex("EmpresaId");

                    b.HasIndex("TipoAtividadeCnaeId");

                    b.HasIndex("TipoCnaeId");

                    b.ToTable("AtividadeCnaes");
                });

            modelBuilder.Entity("Senai.Vagas.Domain.AggregatesModel.EmpresaAggregate.Models.Empresa", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CNPJ")
                        .IsRequired();

                    b.Property<long>("EnderecoId");

                    b.Property<string>("Nome");

                    b.Property<long>("TipoEmpresaId");

                    b.HasKey("Id");

                    b.HasIndex("EnderecoId");

                    b.HasIndex("TipoEmpresaId");

                    b.ToTable("Empresas");
                });

            modelBuilder.Entity("Senai.Vagas.Domain.AggregatesModel.EmpresaAggregate.Models.QSA", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("EmpresaId");

                    b.Property<string>("Nome");

                    b.Property<string>("Qualificacao");

                    b.HasKey("Id");

                    b.HasIndex("EmpresaId");

                    b.ToTable("QSAs");
                });

            modelBuilder.Entity("Senai.Vagas.Domain.AggregatesModel.EmpresaAggregate.Models.TipoCnae", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Codigo");

                    b.Property<string>("Descricao");

                    b.HasKey("Id");

                    b.ToTable("TipoCnaes");
                });

            modelBuilder.Entity("Senai.Vagas.Domain.AggregatesModel.EnderecoAggregate.Models.Endereco", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Bairro");

                    b.Property<string>("CEP");

                    b.Property<string>("Logradouro");

                    b.Property<long>("MunicipioId");

                    b.Property<string>("Numero");

                    b.HasKey("Id");

                    b.HasIndex("MunicipioId");

                    b.ToTable("Enderecos");
                });

            modelBuilder.Entity("Senai.Vagas.Domain.AggregatesModel.EnderecoAggregate.Models.Municipio", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descricao")
                        .IsRequired();

                    b.Property<long>("UfSiglaId");

                    b.HasKey("Id");

                    b.HasIndex("UfSiglaId");

                    b.ToTable("Municipios");
                });

            modelBuilder.Entity("Senai.Vagas.Domain.AggregatesModel.EnderecoAggregate.Models.UfSigla", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("UFEstado")
                        .IsRequired();

                    b.Property<string>("UFSigla")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("UfSiglas");
                });

            modelBuilder.Entity("Senai.Vagas.Domain.AggregatesModel.EstagioAggregate.Models.ContatoEstagio", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("EstagioId");

                    b.Property<string>("TelefoneOuEmail")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("EstagioId");

                    b.ToTable("ContatoEstagios");
                });

            modelBuilder.Entity("Senai.Vagas.Domain.AggregatesModel.EstagioAggregate.Models.Estagio", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("AlunoId");

                    b.Property<bool>("Contrato");

                    b.Property<DateTime>("DataInicio");

                    b.Property<DateTime>("DataTerminoEfetivo");

                    b.Property<DateTime>("DataTerminoPrevisto");

                    b.Property<bool>("Desligamento");

                    b.Property<int>("DiasContrato");

                    b.Property<long>("EnderecoId");

                    b.Property<long>("PessoaResponsavelId");

                    b.Property<bool>("PlanoEstagio");

                    b.Property<long>("RequerimentoMatriculaId");

                    b.Property<long>("TermoOuEgressoAlunoId");

                    b.Property<long>("UsuarioEmpresaId");

                    b.HasKey("Id");

                    b.HasIndex("AlunoId");

                    b.HasIndex("EnderecoId");

                    b.HasIndex("PessoaResponsavelId");

                    b.HasIndex("RequerimentoMatriculaId");

                    b.HasIndex("TermoOuEgressoAlunoId");

                    b.HasIndex("UsuarioEmpresaId");

                    b.ToTable("Estagios");
                });

            modelBuilder.Entity("Senai.Vagas.Domain.AggregatesModel.EstagioAggregate.Models.PessoaResponsavel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nome")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("PessoaResponsaveis");
                });

            modelBuilder.Entity("Senai.Vagas.Domain.AggregatesModel.FaixaSalarialAggregate.Models.FaixaSalarial", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descricao");

                    b.HasKey("Id");

                    b.ToTable("FaixasSalariais");
                });

            modelBuilder.Entity("Senai.Vagas.Domain.AggregatesModel.HistoricoStatusEstagioAggregate.Models.HistoricoStatusEstagio", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Atual");

                    b.Property<long>("EstagioId");

                    b.Property<string>("Explicacao")
                        .IsRequired();

                    b.Property<long>("StatusEstagioId");

                    b.HasKey("Id");

                    b.HasIndex("EstagioId");

                    b.HasIndex("StatusEstagioId");

                    b.ToTable("HistoricoStatusEstagios");
                });

            modelBuilder.Entity("Senai.Vagas.Domain.AggregatesModel.HistoricoStatusUsuarioAggregate.Models.HistoricoStatusUsuario", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Atual");

                    b.Property<long>("StatusUsuarioId");

                    b.Property<long>("UsuarioId");

                    b.HasKey("Id");

                    b.HasIndex("StatusUsuarioId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("HistoricoStatusUsuarios");
                });

            modelBuilder.Entity("Senai.Vagas.Domain.AggregatesModel.InscricaoAggregate.Models.Inscricao", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Ativo");

                    b.Property<bool>("RecebeuConvite");

                    b.Property<long>("UsuarioCandidatoAlunoId");

                    b.Property<long>("VagaId");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioCandidatoAlunoId");

                    b.HasIndex("VagaId");

                    b.ToTable("Inscricoes");
                });

            modelBuilder.Entity("Senai.Vagas.Domain.AggregatesModel.RequerimentoMatriculaAggregate.Models.RequerimentoMatricula", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descricao");

                    b.HasKey("Id");

                    b.ToTable("RequerimentosMatriculas");
                });

            modelBuilder.Entity("Senai.Vagas.Domain.AggregatesModel.StatusEstagioAggregate.Models.StatusEstagio", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descricao");

                    b.HasKey("Id");

                    b.ToTable("StatusEstagios");
                });

            modelBuilder.Entity("Senai.Vagas.Domain.AggregatesModel.StatusUsuarioAggregate.Models.StatusUsuario", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descricao");

                    b.HasKey("Id");

                    b.ToTable("StatusUsuarios");
                });

            modelBuilder.Entity("Senai.Vagas.Domain.AggregatesModel.StatusVagaAggregate.Models.StatusVaga", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descricao");

                    b.HasKey("Id");

                    b.ToTable("StatusVagas");
                });

            modelBuilder.Entity("Senai.Vagas.Domain.AggregatesModel.TermoOuEgressoAlunoEstagioAggregate.Models.TermoOuEgressoAluno", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descricao");

                    b.HasKey("Id");

                    b.ToTable("TermosOuEgressosAlunos");
                });

            modelBuilder.Entity("Senai.Vagas.Domain.AggregatesModel.TipoAtividadeCnaeAggregate.Models.TipoAtividadeCnae", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descricao");

                    b.HasKey("Id");

                    b.ToTable("TiposAtividadesCnaes");
                });

            modelBuilder.Entity("Senai.Vagas.Domain.AggregatesModel.TipoCursoAggregate.Models.TipoCurso", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descricao");

                    b.HasKey("Id");

                    b.ToTable("TiposCursos");
                });

            modelBuilder.Entity("Senai.Vagas.Domain.AggregatesModel.TipoEmpresaAggregate.Models.TipoEmpresa", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descricao");

                    b.HasKey("Id");

                    b.ToTable("TiposEmpresas");
                });

            modelBuilder.Entity("Senai.Vagas.Domain.AggregatesModel.TipoExperienciaAggregate.Models.TipoExperiencia", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descricao");

                    b.HasKey("Id");

                    b.ToTable("TiposExperiencias");
                });

            modelBuilder.Entity("Senai.Vagas.Domain.AggregatesModel.TipoUsuarioAggregate.Models.TipoUsuario", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descricao");

                    b.HasKey("Id");

                    b.ToTable("TiposUsuarios");
                });

            modelBuilder.Entity("Senai.Vagas.Domain.AggregatesModel.UsuarioAdminstradorAggregate.Models.UsuarioAdministrador", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("NIF");

                    b.Property<long>("UsuarioId");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioId");

                    b.ToTable("UsuarioAdministradores");
                });

            modelBuilder.Entity("Senai.Vagas.Domain.AggregatesModel.UsuarioAggregate.Models.Usuario", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .IsRequired();

                    b.Property<string>("Nome")
                        .IsRequired();

                    b.Property<string>("Senha")
                        .IsRequired();

                    b.Property<long>("TipoUsuarioId");

                    b.HasKey("Id");

                    b.HasIndex("TipoUsuarioId");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("Senai.Vagas.Domain.AggregatesModel.UsuarioCandidatoAlunoAggregate.Models.AreasInteresseCandidatoAluno", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("AreaId");

                    b.Property<bool>("Ativo");

                    b.Property<long>("UsuarioCandidatoAlunoId");

                    b.HasKey("Id");

                    b.HasIndex("AreaId");

                    b.HasIndex("UsuarioCandidatoAlunoId");

                    b.ToTable("AreasInteressesCandidatosAlunos");
                });

            modelBuilder.Entity("Senai.Vagas.Domain.AggregatesModel.UsuarioCandidatoAlunoAggregate.Models.PerfilUsuarioCandidatoAluno", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("LinkExterno");

                    b.Property<string>("SobreOCandidato");

                    b.Property<long>("UsuarioCandidatoAlunoId");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioCandidatoAlunoId");

                    b.ToTable("PerfilUsuarioCandidatoAlunos");
                });

            modelBuilder.Entity("Senai.Vagas.Domain.AggregatesModel.UsuarioCandidatoAlunoAggregate.Models.UsuarioCandidatoAluno", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("AlunoId");

                    b.Property<long>("UsuarioId");

                    b.HasKey("Id");

                    b.HasIndex("AlunoId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("UsuarioCandidatoAlunos");
                });

            modelBuilder.Entity("Senai.Vagas.Domain.AggregatesModel.UsuarioEmpresaAggregate.Models.UsuarioEmpresa", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("EmpresaId");

                    b.Property<long>("UsuarioId");

                    b.HasKey("Id");

                    b.HasIndex("EmpresaId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("UsuarioEmpresas");
                });

            modelBuilder.Entity("Senai.Vagas.Domain.AggregatesModel.VagaAggregate.Models.AreaVagaRecomendada", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("AreaId");

                    b.Property<bool>("Ativo");

                    b.Property<long>("VagaId");

                    b.HasKey("Id");

                    b.HasIndex("AreaId");

                    b.HasIndex("VagaId");

                    b.ToTable("AreasVagasRecomendadas");
                });

            modelBuilder.Entity("Senai.Vagas.Domain.AggregatesModel.VagaAggregate.Vaga", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Cargo");

                    b.Property<DateTime>("DataEncerramento");

                    b.Property<string>("DescricaoVaga");

                    b.Property<long>("FaixaSalarialId");

                    b.Property<long>("MunicipioId");

                    b.Property<string>("NomeVaga");

                    b.Property<long>("StatusVagaId");

                    b.Property<long>("TipoExperienciaId");

                    b.Property<long>("UsuarioEmpresaId");

                    b.HasKey("Id");

                    b.HasIndex("FaixaSalarialId");

                    b.HasIndex("MunicipioId");

                    b.HasIndex("StatusVagaId");

                    b.HasIndex("TipoExperienciaId");

                    b.HasIndex("UsuarioEmpresaId");

                    b.ToTable("Vagas");
                });

            modelBuilder.Entity("Senai.Vagas.Domain.AggregatesModel.ValidacaoUsuarioCandidatoAggregate.Models.ValidacaoUsuarioCandidato", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("AlunoId");

                    b.Property<bool>("Ativo");

                    b.Property<DateTime>("DataValida");

                    b.Property<string>("Token")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("AlunoId");

                    b.ToTable("ValidacaoUsuarioCandidatos");
                });

            modelBuilder.Entity("Senai.Vagas.Domain.AggregatesModel.AlterarCredenciaisAggregate.Models.AlterarCredenciais", b =>
                {
                    b.HasOne("Senai.Vagas.Domain.AggregatesModel.UsuarioAggregate.Models.Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Senai.Vagas.Domain.AggregatesModel.AlunoAggregate.Models.Aluno", b =>
                {
                    b.HasOne("Senai.Vagas.Domain.AggregatesModel.TermoOuEgressoAlunoEstagioAggregate.Models.TermoOuEgressoAluno")
                        .WithMany()
                        .HasForeignKey("TermoOuEgressoAlunoId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Senai.Vagas.Domain.AggregatesModel.TipoCursoAggregate.Models.TipoCurso")
                        .WithMany()
                        .HasForeignKey("TipoCursoId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Senai.Vagas.Domain.AggregatesModel.ConviteEntrevistaAggregate.Models.ConviteEntrevista", b =>
                {
                    b.HasOne("Senai.Vagas.Domain.AggregatesModel.EnderecoAggregate.Models.Endereco")
                        .WithMany()
                        .HasForeignKey("EnderecoId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Senai.Vagas.Domain.AggregatesModel.UsuarioCandidatoAlunoAggregate.Models.UsuarioCandidatoAluno")
                        .WithMany()
                        .HasForeignKey("UsuarioCandidatoAlunoId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Senai.Vagas.Domain.AggregatesModel.VagaAggregate.Vaga")
                        .WithMany()
                        .HasForeignKey("VagaId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Senai.Vagas.Domain.AggregatesModel.EmpresaAggregate.Models.AtividadeCnae", b =>
                {
                    b.HasOne("Senai.Vagas.Domain.AggregatesModel.EmpresaAggregate.Models.Empresa")
                        .WithMany()
                        .HasForeignKey("EmpresaId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Senai.Vagas.Domain.AggregatesModel.TipoAtividadeCnaeAggregate.Models.TipoAtividadeCnae")
                        .WithMany()
                        .HasForeignKey("TipoAtividadeCnaeId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Senai.Vagas.Domain.AggregatesModel.EmpresaAggregate.Models.TipoCnae")
                        .WithMany()
                        .HasForeignKey("TipoCnaeId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Senai.Vagas.Domain.AggregatesModel.EmpresaAggregate.Models.Empresa", b =>
                {
                    b.HasOne("Senai.Vagas.Domain.AggregatesModel.EnderecoAggregate.Models.Endereco")
                        .WithMany()
                        .HasForeignKey("EnderecoId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Senai.Vagas.Domain.AggregatesModel.TipoEmpresaAggregate.Models.TipoEmpresa")
                        .WithMany()
                        .HasForeignKey("TipoEmpresaId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Senai.Vagas.Domain.AggregatesModel.EmpresaAggregate.Models.QSA", b =>
                {
                    b.HasOne("Senai.Vagas.Domain.AggregatesModel.EmpresaAggregate.Models.Empresa")
                        .WithMany()
                        .HasForeignKey("EmpresaId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Senai.Vagas.Domain.AggregatesModel.EnderecoAggregate.Models.Endereco", b =>
                {
                    b.HasOne("Senai.Vagas.Domain.AggregatesModel.EnderecoAggregate.Models.Municipio")
                        .WithMany()
                        .HasForeignKey("MunicipioId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Senai.Vagas.Domain.AggregatesModel.EnderecoAggregate.Models.Municipio", b =>
                {
                    b.HasOne("Senai.Vagas.Domain.AggregatesModel.EnderecoAggregate.Models.UfSigla")
                        .WithMany()
                        .HasForeignKey("UfSiglaId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Senai.Vagas.Domain.AggregatesModel.EstagioAggregate.Models.ContatoEstagio", b =>
                {
                    b.HasOne("Senai.Vagas.Domain.AggregatesModel.EstagioAggregate.Models.Estagio")
                        .WithMany()
                        .HasForeignKey("EstagioId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Senai.Vagas.Domain.AggregatesModel.EstagioAggregate.Models.Estagio", b =>
                {
                    b.HasOne("Senai.Vagas.Domain.AggregatesModel.AlunoAggregate.Models.Aluno")
                        .WithMany()
                        .HasForeignKey("AlunoId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Senai.Vagas.Domain.AggregatesModel.EnderecoAggregate.Models.Endereco")
                        .WithMany()
                        .HasForeignKey("EnderecoId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Senai.Vagas.Domain.AggregatesModel.EstagioAggregate.Models.PessoaResponsavel")
                        .WithMany()
                        .HasForeignKey("PessoaResponsavelId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Senai.Vagas.Domain.AggregatesModel.RequerimentoMatriculaAggregate.Models.RequerimentoMatricula")
                        .WithMany()
                        .HasForeignKey("RequerimentoMatriculaId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Senai.Vagas.Domain.AggregatesModel.TermoOuEgressoAlunoEstagioAggregate.Models.TermoOuEgressoAluno")
                        .WithMany()
                        .HasForeignKey("TermoOuEgressoAlunoId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Senai.Vagas.Domain.AggregatesModel.UsuarioEmpresaAggregate.Models.UsuarioEmpresa")
                        .WithMany()
                        .HasForeignKey("UsuarioEmpresaId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Senai.Vagas.Domain.AggregatesModel.HistoricoStatusEstagioAggregate.Models.HistoricoStatusEstagio", b =>
                {
                    b.HasOne("Senai.Vagas.Domain.AggregatesModel.EstagioAggregate.Models.Estagio")
                        .WithMany()
                        .HasForeignKey("EstagioId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Senai.Vagas.Domain.AggregatesModel.StatusEstagioAggregate.Models.StatusEstagio")
                        .WithMany()
                        .HasForeignKey("StatusEstagioId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Senai.Vagas.Domain.AggregatesModel.HistoricoStatusUsuarioAggregate.Models.HistoricoStatusUsuario", b =>
                {
                    b.HasOne("Senai.Vagas.Domain.AggregatesModel.StatusUsuarioAggregate.Models.StatusUsuario")
                        .WithMany()
                        .HasForeignKey("StatusUsuarioId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Senai.Vagas.Domain.AggregatesModel.UsuarioAggregate.Models.Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Senai.Vagas.Domain.AggregatesModel.InscricaoAggregate.Models.Inscricao", b =>
                {
                    b.HasOne("Senai.Vagas.Domain.AggregatesModel.UsuarioCandidatoAlunoAggregate.Models.UsuarioCandidatoAluno")
                        .WithMany()
                        .HasForeignKey("UsuarioCandidatoAlunoId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Senai.Vagas.Domain.AggregatesModel.VagaAggregate.Vaga")
                        .WithMany()
                        .HasForeignKey("VagaId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Senai.Vagas.Domain.AggregatesModel.UsuarioAdminstradorAggregate.Models.UsuarioAdministrador", b =>
                {
                    b.HasOne("Senai.Vagas.Domain.AggregatesModel.UsuarioAggregate.Models.Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Senai.Vagas.Domain.AggregatesModel.UsuarioAggregate.Models.Usuario", b =>
                {
                    b.HasOne("Senai.Vagas.Domain.AggregatesModel.TipoUsuarioAggregate.Models.TipoUsuario")
                        .WithMany()
                        .HasForeignKey("TipoUsuarioId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Senai.Vagas.Domain.AggregatesModel.UsuarioCandidatoAlunoAggregate.Models.AreasInteresseCandidatoAluno", b =>
                {
                    b.HasOne("Senai.Vagas.Domain.AggregatesModel.AreaAggregate.Models.Area")
                        .WithMany()
                        .HasForeignKey("AreaId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Senai.Vagas.Domain.AggregatesModel.UsuarioCandidatoAlunoAggregate.Models.UsuarioCandidatoAluno")
                        .WithMany()
                        .HasForeignKey("UsuarioCandidatoAlunoId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Senai.Vagas.Domain.AggregatesModel.UsuarioCandidatoAlunoAggregate.Models.PerfilUsuarioCandidatoAluno", b =>
                {
                    b.HasOne("Senai.Vagas.Domain.AggregatesModel.UsuarioCandidatoAlunoAggregate.Models.UsuarioCandidatoAluno")
                        .WithMany()
                        .HasForeignKey("UsuarioCandidatoAlunoId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Senai.Vagas.Domain.AggregatesModel.UsuarioCandidatoAlunoAggregate.Models.UsuarioCandidatoAluno", b =>
                {
                    b.HasOne("Senai.Vagas.Domain.AggregatesModel.AlunoAggregate.Models.Aluno")
                        .WithMany()
                        .HasForeignKey("AlunoId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Senai.Vagas.Domain.AggregatesModel.UsuarioAggregate.Models.Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Senai.Vagas.Domain.AggregatesModel.UsuarioEmpresaAggregate.Models.UsuarioEmpresa", b =>
                {
                    b.HasOne("Senai.Vagas.Domain.AggregatesModel.EmpresaAggregate.Models.Empresa")
                        .WithMany()
                        .HasForeignKey("EmpresaId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Senai.Vagas.Domain.AggregatesModel.UsuarioAggregate.Models.Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Senai.Vagas.Domain.AggregatesModel.VagaAggregate.Models.AreaVagaRecomendada", b =>
                {
                    b.HasOne("Senai.Vagas.Domain.AggregatesModel.AreaAggregate.Models.Area")
                        .WithMany()
                        .HasForeignKey("AreaId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Senai.Vagas.Domain.AggregatesModel.VagaAggregate.Vaga")
                        .WithMany()
                        .HasForeignKey("VagaId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Senai.Vagas.Domain.AggregatesModel.VagaAggregate.Vaga", b =>
                {
                    b.HasOne("Senai.Vagas.Domain.AggregatesModel.FaixaSalarialAggregate.Models.FaixaSalarial")
                        .WithMany()
                        .HasForeignKey("FaixaSalarialId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Senai.Vagas.Domain.AggregatesModel.EnderecoAggregate.Models.Municipio")
                        .WithMany()
                        .HasForeignKey("MunicipioId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Senai.Vagas.Domain.AggregatesModel.StatusVagaAggregate.Models.StatusVaga")
                        .WithMany()
                        .HasForeignKey("StatusVagaId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Senai.Vagas.Domain.AggregatesModel.TipoExperienciaAggregate.Models.TipoExperiencia")
                        .WithMany()
                        .HasForeignKey("TipoExperienciaId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Senai.Vagas.Domain.AggregatesModel.UsuarioEmpresaAggregate.Models.UsuarioEmpresa")
                        .WithMany()
                        .HasForeignKey("UsuarioEmpresaId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Senai.Vagas.Domain.AggregatesModel.ValidacaoUsuarioCandidatoAggregate.Models.ValidacaoUsuarioCandidato", b =>
                {
                    b.HasOne("Senai.Vagas.Domain.AggregatesModel.AlunoAggregate.Models.Aluno")
                        .WithMany()
                        .HasForeignKey("AlunoId")
                        .OnDelete(DeleteBehavior.Restrict);
                });
#pragma warning restore 612, 618
        }
    }
}
